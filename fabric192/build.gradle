import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'com.github.johnrengelman.shadow'
}

sourceSets {
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = 'Negativity'

loom {
    serverOnlyMinecraftJar()
}

dependencies {
    api "com.elikill58:Negativity:2.5"

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-screen-handler-api-v1:${project.fabric_version}"

    compileOnly 'io.netty:netty-all:4.1.79.Final'
}

compileJava.javaCompiler.set(
        javaToolchains.compilerFor { languageVersion = JavaLanguageVersion.of(17) }
)

processResources {
    def props = [
            "version": project.version,
            "fabric_version": project.fabric_version,
            "loader_version": project.loader_version,
            "minecraft_version": project.minecraft_version,
    ]
    inputs.properties props

    filesMatching("fabric.mod.json") {
        expand props
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

shadowJar {
    archiveBaseName.set('negativity')
    archiveAppendix.set('fabric')
    archiveClassifier.set('dev')

    mergeServiceFiles()

    exclude('dummyThing')
    exclude('mappings/*')

    destinationDirectory.set(layout.buildDirectory.dir('devlibs'))
}

task remapShadowJar(type: RemapJarTask) {
    dependsOn shadowJar
    archiveBaseName.set('negativity')
    archiveAppendix.set('fabric')
    inputFile.set(shadowJar.archiveFile)
    destinationDirectory.set(layout.buildDirectory.dir('libs'))
}

build.dependsOn remapShadowJar

parent.tasks.named('shadowJar', ShadowJar) {
    it.from(remapShadowJar.outputs)
    it.manifest.inheritFrom(tasks.jar.manifest)
}

task prepareServer(type: Copy) {
    from remapShadowJar.outputs
    rename { 'negativity.jar' }
    def pluginDir = System.getProperty('plugins.dir')
    if (pluginDir == null) {
        enabled(false)
    } else {
        into pluginDir
    }
}
